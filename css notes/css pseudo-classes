A pseudo-class is a keyword that can be added to selectors, in order to select a specific state of the element.

For example, the styling of an anchor tag can be changed for its hover state using the :hover pseudo-class selector. 

Here's the CSS to change the color of the anchor tag to red during its hover state:
	a:hover {
		color: red;
	}
		this basically means when the user hovers over the a element, the color will change to red
		
CSS treats each HTML element as its own box, which is usually referred to as the CSS Box Model. 
	Block-level items automatically start on a new line (think headings, paragraphs, and divs) while inline items sit within surrounding content (like images or spans). 
	The default layout of elements in this way is called the normal flow of a document, but CSS offers the position property to override it.
	
When the position of an element is set to relative, it allows you to specify how CSS should move it relative to its current position in the normal flow of the page. 
	It pairs with the CSS offset properties of left or right, and top or bottom. 
	These say how many pixels, percentages, or ems to move the item away from where it is normally positioned. 

The following example moves the paragraph 10 pixels AWAY from the bottom:
	p {
		position: relative;
		bottom: 10px;
	}

Changing an element's position to relative does not remove it from the normal flow
	Oher elements around it still behave as if that item were in its default position.
	
Positioning gives you a lot of flexibility and power over the visual layout of a page. 
	It's good to remember that no matter the position of elements, the underlying HTML markup should be organized and make sense when read from top to bottom. 
	This is how users with visual impairments (who rely on assistive devices like screen readers) access your content.
	
Notice there is no impact on the positions of the surrounding lements.

The CSS offsets of top or bottom, and left or right tell the browser how far to offset an item relative to where it would sit in the normal flow of the document. 
	You're offsetting an element away from a given spot, which moves the element away from the referenced side (effectively, the opposite direction). 
	As you saw in the last challenge, using the top offset moved the h2 downwards. 
	Likewise, using a left offset moves an item to the right.

