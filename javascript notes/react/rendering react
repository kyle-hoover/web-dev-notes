To render a JSX expression means to make it appear onscreen.

The following code will render a JSX expression:
  ReactDOM.render(<h1>Hello world</h1>, document.getElementById('app'));
    JavaScript is case-sensitive, so make sure to capitalize ReactDOM correctly!
    
ReactDOM is the name of a JavaScript library. 
  This library contains several React-specific methods, all of which deal with the DOM in some way or another.
  
Move slightly to the right, and you can see one of ReactDOM's methods: ReactDOM.render().
  ReactDOM.render() is the most common way to render JSX. 
  It takes a JSX expression, creates a corresponding tree of DOM nodes, and adds that tree to the DOM.
  That is the way to make a JSX expression appear onscreen.
  
<h1>Hello world</h1>
  This is the first argument being passed to ReactDOM.render(). 
  ReactDOM.render()'s first argument should be a JSX expression, and it will be rendered to the screen.
	
document.getElementById('app')
	You just learned that ReactDOM.render() makes its first argument appear onscreen. 
	But where on the screen should that first argument appear?
	The first argument is appended to whatever element is selected by the second argument.
		In this case, it is after the element with the ID 'app'

ReactDOM.render()'s first argument should evaluate to a JSX expression, it doesn't have to literally be a JSX expression.
	The first argument could also be a variable, so long as that variable evaluates to a JSX expression.

In this example, we save a JSX expression as a variable named toDoList. 
	We then pass toDoList as the first argument to ReactDOM.render():

		const toDoList = (
 			<ol>
				<li>Learn React</li>
				<li>Become a Developer</li>
			</ol>
		);

		ReactDOM.render(
			toDoList, 
			document.getElementById('app')
		);

One special thing about ReactDOM.render() is that it only updates DOM elements that have changed.
	That means that if you render the exact same thing twice in a row, the second render will do nothing:

const hello = <h1>Hello world</h1>;
// This will add "Hello world" to the screen:

ReactDOM.render(hello, document.getElementById('app'));
// This won't do anything at all:

ReactDOM.render(hello, document.getElementById('app'));

This is significant! Only updating the necessary DOM elements is a large part of what makes React so successful.
