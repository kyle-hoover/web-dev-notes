Basic Example:
	var k = {
		name: "Kyle"
		sayName:	function () {		//don't need to put the sayName function () because we're accessing through the property sayName
			console.log(this);		//javascript uses the keyword "this" to refer to the entire object a function would be in
		}
		
	kyle.sayName(); //outputs {name: "Kyle"}
	
	//we don't use console.log(name) because name would be a variable and the name property is considered an object property not a variable!
	
If we want sayName to say "Kyle" rather than provide the whole object:
	var k = {
		name: "Kyle",
		sayName: function () {		
			console.log(this.name);			
		}
	}

	//prints Kyle

Rewriting our old functions in an object:
	var todoList = {
  		todos: ["item 1", "item 2", "item3"],
  		displayTodos: function() {					//call this in console using todoList.displayTodos()
    			console.log("My todos:", this.todos);
  		},
  		addTodo: function(todo) {					//call this in console using todoList.addTodo("hey")
    			this.todos.push(todo);
    			this.displayTodos();
  			}
		},
		changeTodo: function(position, newValue) {			//call this in console using todoList.changeTodo(0, "yo")
    			this.todos[position] = newValue
   			this.displayTodos();
  		},
