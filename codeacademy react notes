const h1 = <h1>Hello world</h1>;
	this is javascript!
	the <h1>Hello world</h1> is JSX

JSX = a syntax extension for JavaScript
	syntax extension = JSX is not valid JavaScript. Web browsers can't read it
	If a JavaScript file contains JSX code, then that file will have to be compiled. 
	That means that before the file reaches a web browser, a JSX compiler will translate any JSX into regular JavaScript.
	
A basic unit of JSX is called a JSX element.
	Here's an example of a JSX element:
	<h1>Hello world</h1>
		This JSX element looks exactly like HTML! 
		The only noticeable difference is that you would find it in a JavaScript file, instead of in an HTML file.
		
JSX elements = treated as JavaScript expressions. 
	They can go anywhere that JavaScript expressions can go.
	That means that a JSX element can be saved in a variable, passed to a function, stored in an object or array...you name it.
	
Ex. JSX element variable:
	const navBar = <nav>I am a nav bar</nav>;
	
Ex. JSX elements being stored in an object:
	const myTeam = {
		center: <li>Benzo Walli</li>,
		powerForward: <li>Rasha Loa</li>,
		smallForward: <li>Tayshaun Dasmoto</li>,
		shootingGuard: <li>Colmar Cumberbatch</li>,
		pointGuard: <li>Femi Billon</li>
	};

JSX elements can have attributes, just like HTML elements can.

A JSX attribute is written using HTML-like syntax: a name, followed by an equals sign, followed by a value. 
The value should be wrapped in quotes, like this:
	my-attribute-name="my-attribute-value"
	
Example:
	const title = <h1 id="title">Introduction to React.js: Part I</h1>;
	const panda = <img src="images/panda.jpg" alt="panda" width="500px" height="500px" />;
	
const p1 = <p id="large">foo</p>;
const p2 = <p id="small">bar</p>;
